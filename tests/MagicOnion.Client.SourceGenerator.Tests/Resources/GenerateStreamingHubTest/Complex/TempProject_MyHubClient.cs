// <auto-generated />
#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace TempProject
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class MyHubClient : global::MagicOnion.Client.StreamingHubClientBase<global::TempProject.IMyHub, global::TempProject.IMyHubReceiver>, global::TempProject.IMyHub
    {
        protected override global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]> DuplexStreamingAsyncMethod { get; }
        
        public MyHubClient(global::Grpc.Core.CallInvoker callInvoker, global::System.String host, global::Grpc.Core.CallOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider, global::MagicOnion.Client.IMagicOnionClientLogger logger)
            : base(callInvoker, host, options, serializerProvider, logger)
        {
            var marshaller = global::MagicOnion.MagicOnionMarshallers.ThroughMarshaller;
            DuplexStreamingAsyncMethod = new global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]>(global::Grpc.Core.MethodType.DuplexStreaming, "IMyHub", "Connect", marshaller, marshaller);
        }
        
        public global::System.Threading.Tasks.Task A()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1005848884, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task B(global::TempProject.MyObject a)
            => base.WriteMessageWithResponseAsync<global::TempProject.MyObject, global::MessagePack.Nil>(-955516027, a);
        public global::System.Threading.Tasks.Task C(global::TempProject.MyObject a, global::System.String b)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String>, global::MessagePack.Nil>(-972293646, new global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String>(a, b));
        public global::System.Threading.Tasks.Task D(global::TempProject.MyObject a, global::System.String b, global::System.Int32 c)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String, global::System.Int32>, global::MessagePack.Nil>(-1056181741, new global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String, global::System.Int32>(a, b, c));
        public global::System.Threading.Tasks.Task<global::System.Int32> E(global::TempProject.MyObject a, global::System.String b, global::System.Int32 c)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String, global::System.Int32>, global::System.Int32>(-1072959360, new global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String, global::System.Int32>(a, b, c));
        
        public global::TempProject.IMyHub FireAndForget()
            => new FireAndForgetClient(this);
        
        [global::MagicOnion.Ignore]
        class FireAndForgetClient : global::TempProject.IMyHub
        {
            readonly MyHubClient parent;
        
            public FireAndForgetClient(MyHubClient parent)
                => this.parent = parent;
        
            public global::TempProject.IMyHub FireAndForget() => this;
            public global::System.Threading.Tasks.Task DisposeAsync() => throw new global::System.NotSupportedException();
            public global::System.Threading.Tasks.Task WaitForDisconnect() => throw new global::System.NotSupportedException();
        
            public global::System.Threading.Tasks.Task A()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1005848884, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task B(global::TempProject.MyObject a)
                => parent.WriteMessageFireAndForgetAsync<global::TempProject.MyObject, global::MessagePack.Nil>(-955516027, a);
            public global::System.Threading.Tasks.Task C(global::TempProject.MyObject a, global::System.String b)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String>, global::MessagePack.Nil>(-972293646, new global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String>(a, b));
            public global::System.Threading.Tasks.Task D(global::TempProject.MyObject a, global::System.String b, global::System.Int32 c)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String, global::System.Int32>, global::MessagePack.Nil>(-1056181741, new global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String, global::System.Int32>(a, b, c));
            public global::System.Threading.Tasks.Task<global::System.Int32> E(global::TempProject.MyObject a, global::System.String b, global::System.Int32 c)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String, global::System.Int32>, global::System.Int32>(-1072959360, new global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String, global::System.Int32>(a, b, c));
            
        }
        
        protected override void OnBroadcastEvent(global::System.Int32 methodId, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case -1262822265: // Void OnMessage()
                    {
                        var value = base.Deserialize<global::MessagePack.Nil>(data);
                        receiver.OnMessage();
                    }
                    break;
                case 925462767: // Void OnMessage2(global::TempProject.MyObject a)
                    {
                        var value = base.Deserialize<global::TempProject.MyObject>(data);
                        receiver.OnMessage2(value);
                    }
                    break;
                case 908685148: // Void OnMessage3(global::TempProject.MyObject a, global::System.String b, global::System.Int32 c)
                    {
                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::TempProject.MyObject, global::System.String, global::System.Int32>>(data);
                        receiver.OnMessage3(value.Item1, value.Item2, value.Item3);
                    }
                    break;
            }
        }
        
        protected override void OnResponseEvent(global::System.Int32 methodId, global::System.Object taskCompletionSource, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case -1005848884: // Task A()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -955516027: // Task B(global::TempProject.MyObject a)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -972293646: // Task C(global::TempProject.MyObject a, global::System.String b)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -1056181741: // Task D(global::TempProject.MyObject a, global::System.String b, global::System.Int32 c)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -1072959360: // Task<Int32> E(global::TempProject.MyObject a, global::System.String b, global::System.Int32 c)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
            }
        }
        
    }
}


