using MagicOnion.Client.SourceGenerator.Internal;

namespace MagicOnion.Client.SourceGenerator.CodeGen;

internal class MemoryPackFormatterRegistrationGenerator : ISerializerFormatterGenerator
{
    public string Build(SerializationFormatterCodeGenContext ctx)
    {
        EmitPreamble(ctx);
        EmitBody(ctx);
        EmitPostscript(ctx);

        return ctx.GetWrittenText();
    }

    static void EmitPreamble(SerializationFormatterCodeGenContext ctx)
    {
        ctx.TextWriter.WriteLines("""
        // <auto-generated />
        #pragma warning disable CS0618 // 'member' is obsolete: 'text'
        #pragma warning disable CS0612 // 'member' is obsolete

        """);
    }

    static void EmitBody(SerializationFormatterCodeGenContext ctx)
    {
        ctx.TextWriter.WriteLines($$"""
        namespace {{ctx.Namespace}}
        {
            using global::System;
            using global::MemoryPack;
        """);

        using (ctx.TextWriter.BeginIndent())
        {
            EmitRegister(ctx);
        }

        ctx.TextWriter.WriteLines($$"""
        }
        """);
    }

    static void EmitRegister(SerializationFormatterCodeGenContext ctx)
    {
        ctx.TextWriter.WriteLines($$"""
        public class {{ctx.InitializerName}}
        {
            public static void RegisterFormatters()
            {
        """);
        using (ctx.TextWriter.BeginIndent(2))
        {
            foreach (var (resolverInfo, index) in ctx.FormatterRegistrations.Select((x, i) => (x, i)))
            {
                ctx.TextWriter.WriteLines($$"""
                global::MemoryPack.MemoryPackFormatterProvider.Register(new {{(resolverInfo.FormatterName.StartsWith("global::") || string.IsNullOrWhiteSpace(ctx.FormatterNamespace) ? "" : ctx.FormatterNamespace + ".") + resolverInfo.FormatterName}}{{resolverInfo.FormatterConstructorArgs}});
                """);
            }
        }
        ctx.TextWriter.WriteLines($$"""
            }
        }
        """);
    }

    static void EmitPostscript(SerializationFormatterCodeGenContext ctx)
    {
    }
}
