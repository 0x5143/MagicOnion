<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="MagicOnion.Generator.CodeGen.Extensions" #>
#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace <#= Namespace #>
{
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::MagicOnion;
    using global::MagicOnion.Client;

    public static partial class MagicOnionInitializer
    {
        static bool isRegistered = false;

<# if (!OmitUnityAttribute) { #>
        [UnityEngine.RuntimeInitializeOnLoadMethod(UnityEngine.RuntimeInitializeLoadType.BeforeSceneLoad)]
<# } #>
        public static void Register()
        {
            if(isRegistered) return;
            isRegistered = true;

<# foreach(var serviceInfo in Services) { #>
<# if(serviceInfo.HasIfDirectiveCondition) { #>
#if <#= serviceInfo.IfDirectiveCondition #>
<# } #>
            MagicOnionClientRegistry<<#= serviceInfo.ServiceType.FullName #>>.Register((x, y) => new <#= serviceInfo.GetClientFullName() #>(x, y));
<# if(serviceInfo.HasIfDirectiveCondition) { #>
#endif
<# } #>
<# } // foreach #>

<# foreach(var hubInfo in Hubs) { #>
<# if(hubInfo.HasIfDirectiveCondition) { #>
#if <#= hubInfo.IfDirectiveCondition #>
<# } #>
            StreamingHubClientRegistry<<#= hubInfo.ServiceType.FullName #>, <#= hubInfo.Receiver.ReceiverType.FullName #>>.Register((a, _, b, c, d, e) => new <#= hubInfo.GetClientFullName() #>(a, b, c, d, e));
<# if(hubInfo.HasIfDirectiveCondition) { #>
#endif
<# } #>
<# } // foreach #>
        }
    }
}

#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618
